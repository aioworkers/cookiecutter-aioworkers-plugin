[project]
name = "cookiecutter-aioworkers-plugin"
version = "0.0.0"
requires-python = ">=3.9"
dependencies = [
  "cookiecutter==2.6.0",
  "scaraplate==0.5",
]

[project.optional-dependencies]
dev-test = [
  "sh==2.2.1",
  "docker==6.1.3",
  "coverage[toml]==7.3.2",
  "pytest==7.4.3",
  "pytest-cookies==0.7.0",
]
dev-lint = [
  "ruff==0.11.2",
  "isort==5.13.2",
  "black==23.10.1",
  "mypy==1.8.0",
]

[tool.hatch.envs.default]
features = [
  "dev-test",
  "dev-lint",
]

[tool.hatch.envs.default.scripts]
init = [
  "scaraplate rollup . {args}",
]
update = [
  "scaraplate rollup --no-input . {args}",
]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = [
  "3.9",
  "3.10",
  "3.11",
]

[tool.hatch.envs.lint]
features = [
  "dev-lint",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:tests}"
style = [
  "ruff {args:.}",
  "isort --check-only --diff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "isort {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.mypy]
check_untyped_defs = true
[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "py",
  "sh",
  "pytest",
  "pytest_cookies.plugin",
]

[tool.black]
target-version = ["py38"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py38"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = []

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.pytest.ini_options]
testpaths = ["tests"]
norecursedirs = ["tests/projects"]

[tool.coverage.run]
source = ["tests"]
branch = true
parallel = true
omit = [
]

[tool.coverage.paths]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
