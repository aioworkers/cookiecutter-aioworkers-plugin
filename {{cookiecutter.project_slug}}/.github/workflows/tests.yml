name: Tests

on:
  push:
    branches:
      - '{{cookiecutter.git_branch}}'
    tags: [ '*' ]
  pull_request:
    branches:
      - '{{cookiecutter.git_branch}}'

jobs:
  tests:
    strategy:
      max-parallel: 7
      matrix:
        os:
          - ubuntu-22.04
        python-version:
          {%- for version in (cookiecutter.python_versions | replace(cookiecutter.python_ci + ",", "")).split(",") %}
          - '{{ version }}'
          {%- endfor %}
          - pypy-3.9
        include:
          - os: ubuntu-22.04
            python-version: '{{ cookiecutter.python_ci }}'
            coverage: true
            lint: true
          - os: macOS-latest
            python-version: '{{ cookiecutter.python_ci }}'
          - os: windows-latest
            python-version: '{{ cookiecutter.python_ci }}'

    runs-on: ${{ '{{' }} matrix.os }}

    steps:
      - uses: actions/checkout@v4.2.2
      - name: Set up Python ${{ '{{' }} matrix.python-version }}
        uses: actions/setup-python@v5.3.0
        with:
          python-version: ${{ '{{' }} matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -U hatch
      - name: ruff
        if: ${{ '{{' }} matrix.lint }}
        run: |
          hatch run lint:style {{cookiecutter.project_package}} tests
      - name: mypy
        if: ${{ '{{' }} matrix.lint }}
        run: |
          hatch run lint:mypy {{cookiecutter.project_package}} tests
      - name: Tests with coverage
        run: |
          hatch run cov
      - name: coverage.xml
        if: ${{ '{{' }} matrix.coverage }}
        run: |
          hatch run coverage xml
      - name: Upload coverage to Codecov
        if: ${{ '{{' }} matrix.coverage }}
        uses: codecov/codecov-action@v5.1.1
        with:
          token: ${{ '{{' }} secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
